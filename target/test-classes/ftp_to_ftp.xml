<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:mulerequester="http://www.mulesoft.org/schema/mule/mulerequester"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/mulerequester http://www.mulesoft.org/schema/mule/mulerequester/current/mule-mulerequester.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
   <file:connector name="OutputErrorFile" autoDelete="true" outputAppend="true" streaming="true" validateConnections="true" doc:name="OutputErrorFile"/>
    <file:connector name="FTP_to_FTP" autoDelete="false" outputAppend="true" streaming="true" validateConnections="true" doc:name="File"/>
<configuration doc:name="Configuration">
       <expression-language>
       <import class="com.fasterxml.jackson.core.io.JsonStringEncoder" />
		<global-functions>
    		def quoteJSONString(s) {
				return String.valueOf(JsonStringEncoder.getInstance().quoteAsString(s))
			}
   		</global-functions>
	</expression-language>
</configuration>
 <sftp:connector name="SFTP" validateConnections="true" doc:name="SFTP" duplicateHandling="overwrite" preferredAuthenticationMethods="publickey,password,keyboard-interactive"/>
      <flow name="ftp_to_ftp_ICG_MDFlow" initialState="stopped">
        <sftp:inbound-endpoint connector-ref="SFTP" host="${ftp.to.ftp.orig.sftp.host}" port="${ftp.to.ftp.orig.sftp.port}" path="${ftp.to.ftp.orig.sftp.path.icg.md}" user="${ftp.to.ftp.orig.sftp.user}" password="${ftp.to.ftp.orig.sftp.pwd}" responseTimeout="10000" archiveDir="${ftp.to.ftp.orig.sftp.temp.path.icg}" doc:name="SFTP_MD" pollingFrequency="${ftp.to.ftp.orig.sftp.poll.frequency}">
            <file:filename-regex-filter pattern="${ftp.to.ftp.orig.sftp.regex.icg}" caseSensitive="true"/>
        </sftp:inbound-endpoint>
        <flow-ref name="log_flow_start" doc:name="log_flow_start"/>
        <logger message="Moving file : #[message.inboundProperties.originalFilename]" level="INFO" category="${ftp.to.ftp.log.category}" doc:name="Logger"/>
        <message-properties-transformer scope="invocation" doc:name="Message Properties">
            <add-message-property key="processedPath" value="${ftp.to.ftp.orig.sftp.processed.path.icg.md}"/>
            <add-message-property key="errorPath" value="${ftp.to.ftp.orig.sftp.error.path.icg.md}"/>
            <add-message-property key="originalFilename" value="#[message.inboundProperties.originalFilename]"/>
            <add-message-property key="destinationPath" value="${ftp.to.ftp.dest.sftp.icg.path}"/>
            <add-message-property key="destinationHost" value="${ftp.to.ftp.dest.sftp.icg.host}"/>
            <add-message-property key="destinationPort" value="${ftp.to.ftp.dest.sftp.icg.port}"/>
            <add-message-property key="destinationUser" value="${ftp.to.ftp.dest.sftp.icg.user}"/>
            <add-message-property key="destinationPwd" value="${ftp.to.ftp.dest.sftp.icg.pwd}"/>
            <add-message-property key="tempPath" value="${ftp.to.ftp.orig.sftp.temp.path.icg}"/>
        </message-properties-transformer>
        <flow-ref name="ftp_to_ftpSub_Flow" doc:name="ftp_to_ftpSub_Flow"/>
        <flow-ref name="log_flow_end" doc:name="log_flow_end"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <flow-ref name="ftp_to_ftpErrorFlow" doc:name="ftp_to_ftpErrorSub_Flow"/>
            <flow-ref name="log_flow_error" doc:name="log_flow_error"/>
            <flow-ref name="log_flow_end" doc:name="log_flow_end"/>
        </catch-exception-strategy>
    </flow>
     <sub-flow name="ftp_to_ftpSub_Flow">
        <expression-component doc:name="close Input Stream"><![CDATA[//message.payload.close();]]></expression-component>
        <logger message="About to execute: #[&quot;file://&quot;+ flowVars.tempPath +&quot;/&quot; +  flowVars.originalFilename + &quot;?connector=FTP_to_FTP&quot;] " level="INFO" category="${ftp.to.ftp.log.category}" doc:name="Logger"/>
        <mulerequester:request  resource="#[&quot;file://&quot;+ flowVars.tempPath +&quot;/&quot; +flowVars.originalFilename + &quot;?connector=FTP_to_FTP&quot;] " timeout="10000" doc:name="Mule Requester Read File"/>
        <sftp:outbound-endpoint exchange-pattern="request-response" outputPattern="#[message.inboundProperties.originalFilename]" host="#[flowVars.destinationHost]" port="#[flowVars.destinationPort]" path="#[flowVars.destinationPath]" user="#[flowVars.destinationUser]" password="#[flowVars.destinationPwd]" responseTimeout="10000" encoding="ISO-8859-1" duplicateHandling="overwrite" doc:name="SFTP Out"/>
        <logger message="About to execute: #[&quot;file://&quot;+ flowVars.tempPath +&quot;/&quot; +  flowVars.originalFilename + &quot;?connector=OutputErrorFile&quot;] " level="INFO" category="${ftp.to.ftp.log.category}" doc:name="Logger"/>
        <mulerequester:request  resource="#[&quot;file://&quot;+ flowVars.tempPath +&quot;/&quot; + flowVars.originalFilename + &quot;?connector=OutputErrorFile&quot;] " doc:name="Mule Requester Read File and Delete"/>
        <sftp:outbound-endpoint exchange-pattern="request-response" outputPattern="#[message.inboundProperties.originalFilename]" host="${ftp.to.ftp.orig.sftp.host}" port="${ftp.to.ftp.orig.sftp.port}" path="#[flowVars.processedPath]" user="${ftp.to.ftp.orig.sftp.user}" password="${ftp.to.ftp.orig.sftp.pwd}" responseTimeout="10000" encoding="ISO-8859-1" duplicateHandling="overwrite" doc:name="SFTP Out to Processed"/>
    </sub-flow>
    <flow name="ftp_to_ftpErrorFlow">
        <mulerequester:request resource="#[&quot;file://&quot;+ flowVars.tempPath +&quot;/&quot; + flowVars.originalFilename + &quot;?connector=OutputErrorFile&quot;] "  doc:name="Mule Requester Read File and Delete"/>
        <sftp:outbound-endpoint exchange-pattern="request-response" outputPattern="#[message.inboundProperties.originalFilename]" host="${ftp.to.ftp.orig.sftp.host}" port="${ftp.to.ftp.orig.sftp.port}" path="#[flowVars.errorPath]" user="${ftp.to.ftp.orig.sftp.user}" password="${ftp.to.ftp.orig.sftp.pwd}" responseTimeout="10000" encoding="ISO-8859-1" duplicateHandling="overwrite" doc:name="SFTP Out to ERROR"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <flow-ref name="log_flow_error" doc:name="log_flow_error"/>
            <flow-ref name="log_flow_end" doc:name="log_flow_end"/>
        </catch-exception-strategy>
    </flow>
</mule>
